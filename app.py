import streamlit as st
import requests
import pandas as pd
from datetime import datetime
import plotly.express as px

# =========================
# CSS ch·ªânh s·ª≠a giao di·ªán
# =========================
st.markdown(
    """
    <style>
    .stApp {
        background: linear-gradient(135deg, #0f4c81 0%, #146c9a 40%, #1aa7b8 100%);
        color: #fff;
    }

    .neon-title {
        font-weight: 900;
        font-size: 34px;
        text-transform: uppercase;
        letter-spacing: 1px;
        display: block;
        padding: 8px 16px;
        -webkit-text-stroke: 0.6px rgba(0,0,0,0.12);
        animation: neonGlow 6s linear infinite;
        text-align: center;
        margin-top: 12px;
        color: #ffffff;
    }

    .panel-6 {
        background: #028B8C; 
        border-radius: 12px;
        padding: 12px;
        margin-top: 10px;
    }

    .panel h3 {
        margin-top:0;
        color: #fff;
    }

    .panel p {
        color: #f0f7f7;
    }

    div.stButton > button {
        background-color: #007BFF;
        color: white !important;
        border-radius: 8px;
        border: none;
        font-weight: 700;
        padding: 0.45rem 0.9rem;
        transition: transform 0.12s ease, background-color 0.12s ease;
        box-shadow: 0 6px 12px rgba(0,0,0,0.12);
    }
    div.stButton > button:hover {
        background-color: #00BFFF;
        color: white !important;
        transform: translateY(-2px);
        box-shadow: 0 10px 18px rgba(0,0,0,0.18);
    }

    .chatbot-box {
        height: 300px;
        overflow-y: scroll;
        background: rgba(255,255,255,0.1);
        border-radius: 8px;
        padding: 12px;
        margin-top: 10px;
    }

    .chat-button {
        background-color: #028B8C;
        color: white;
        border-radius: 8px;
        padding: 12px;
        margin-top: 12px;
        text-align: center;
        font-size: 16px;
    }
    </style>
    """,
    unsafe_allow_html=True
)

# =========================
# API Hugging Face Chatbot (V·ªõi API Key)
# =========================
HF_API_URL = "https://api-inference.huggingface.co/models/mistralai/Mixtral-8x7B-Instruct"
HF_API_KEY = "YOUR_HUGGINGFACE_API_KEY"  # Thay th·∫ø b·∫±ng API Key c·ªßa b·∫°n

def query_hf_model(prompt: str):
    try:
        headers = {
            "Authorization": f"Bearer {HF_API_KEY}",
            "Content-Type": "application/json"
        }
        payload = {"inputs": prompt, "parameters": {"max_new_tokens": 100}}
        response = requests.post(HF_API_URL, json=payload, headers=headers, timeout=20)

        if response.status_code == 200:
            response_json = response.json()
            if isinstance(response_json, dict) and "generated_text" in response_json:
                return response_json["generated_text"]
            return "Chatbot kh√¥ng c√≥ ph·∫£n h·ªìi h·ª£p l·ªá."
        return f"(L·ªói khi k·∫øt n·ªëi: HTTP {response.status_code})"
    except Exception as e:
        return f"(L·ªói khi g·ªçi API: {e})"

# =========================
# Giao di·ªán Streamlit
# =========================
st.set_page_config(
    page_title="·ª®ng d·ª•ng Tra C·ª©u Th·ªùi Ti·∫øt Th·ªùi Gian Th·ª±c",
    layout="wide",
    initial_sidebar_state="expanded"
)

# =========================
# Ti√™u ƒë·ªÅ v√† b·∫£n quy·ªÅn
# =========================
st.markdown('<div style="text-align:center"><span class="neon-title">·ª®ng D·ª•ng Tra C·ª©u Th·ªùi Ti·∫øt Th·ª±c Th·ªùi Gian</span></div>', unsafe_allow_html=True)

st.markdown(
    """
    <div class="fixed-topbar">
    ¬© 2025 Tr∆∞·ªùng THPT L√™ Qu√Ω ƒê√¥n ‚Äì Long B√¨nh T√¢n | Web app thu th·∫≠p d·ªØ li·ªáu th·ªùi gian th·ª±c
    </div>
    """,
    unsafe_allow_html=True
)

# =========================
# Sidebar c·∫•u h√¨nh
# =========================
st.sidebar.header("C·∫•u H√¨nh")
st.sidebar.markdown("Ch·ªçn t·ªânh/th√†nh v√† th√¥ng s·ªë c·∫ßn xem.")
selected_place = st.sidebar.selectbox("Ch·ªçn t·ªânh/th√†nh", options=["TP. H√† N·ªôi", "TP. H·ªì Ch√≠ Minh", "C·∫ßn Th∆°", "ƒê√† N·∫µng", "Hu·∫ø"])
st.sidebar.markdown("---")
params_default = ["Nhi·ªát ƒë·ªô (¬∞C)", "ƒê·ªô ·∫©m (%)", "L∆∞·ª£ng m∆∞a (mm)", "T·ªëc ƒë·ªô gi√≥ (m/s)", "Ch·ªâ s·ªë UV"]
selected_params = st.sidebar.multiselect("Th√¥ng s·ªë", options=params_default, default=params_default[:4])

# =========================
# Chatbot Input
# =========================
st.markdown('<div class="panel panel-6">', unsafe_allow_html=True)
st.markdown("### Chatbot AI - H·ªèi ƒë√°p v·ªÅ th·ªùi ti·∫øt & kh√≠ h·∫≠u", unsafe_allow_html=True)
user_input = st.text_input("Nh·∫≠p c√¢u h·ªèi c·ªßa b·∫°n v·ªÅ th·ªùi ti·∫øt ho·∫∑c kh√≠ h·∫≠u...", key="chat_input")

if st.button("üí¨ G·ª≠i c√¢u h·ªèi"):
    if user_input:
        with st.spinner("ƒêang g·ª≠i c√¢u h·ªèi..."):
            response = query_hf_model(user_input)
            st.markdown(f"**Tr·∫£ l·ªùi t·ª´ Chatbot:** {response}")

st.markdown('</div>', unsafe_allow_html=True)

# =========================
# Display k·∫øt qu·∫£
# =========================
st.markdown("### K·∫øt qu·∫£ tra c·ª©u", unsafe_allow_html=True)
# Gi·∫£ s·ª≠ API ƒë√£ k·∫øt n·ªëi v√† c√≥ d·ªØ li·ªáu.
# Trong tr∆∞·ªùng h·ª£p th·ª±c t·∫ø, b·∫°n c·∫ßn g·ªçi API nh∆∞ ƒë√£ l√†m ·ªü ph·∫ßn tr∆∞·ªõc ƒë·ªÉ l·∫•y d·ªØ li·ªáu.

st.write(f"ƒê·ªãa ph∆∞∆°ng: {selected_place}")
st.write(f"C√°c th√¥ng s·ªë ƒë∆∞·ª£c ch·ªçn: {', '.join(selected_params)}")

# Ch·ªâ th·ªã t·ª´ ph√≠a API Hugging Face ƒë√£ t√≠ch h·ª£p s·∫µn, trong tr∆∞·ªùng h·ª£p h·ªá th·ªëng kh√¥ng c√≥ m·∫°ng, d·ªØ li·ªáu d·ª± ph√≤ng s·∫Ω ƒë∆∞·ª£c s·ª≠ d·ª•ng.
