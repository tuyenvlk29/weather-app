import streamlit as st
import pandas as pd
import requests

# -------------------------------
# C·∫•u h√¨nh trang
# -------------------------------
st.set_page_config(page_title="M√¥ ph·ªèng D·ªØ li·ªáu Th·ªùi ti·∫øt Vi·ªát Nam", page_icon="üå¶", layout="centered")

st.title("üå¶ M√¥ ph·ªèng D·ªØ li·ªáu Th·ªùi ti·∫øt Vi·ªát Nam ‚Äì Th·ªùi gian th·ª±c")
st.markdown("### ·ª®ng d·ª•ng thu th·∫≠p, m√¥ ph·ªèng v√† xu·∫•t d·ªØ li·ªáu kh√≠ t∆∞·ª£ng ph·ª•c v·ª• h·ªçc t·∫≠p STEM")

# -------------------------------
# Danh s√°ch t·ªânh/th√†nh ph·ªë Vi·ªát Nam
# -------------------------------
cities = {
    "H√† N·ªôi": (21.0285, 105.8542),
    "H·∫£i Ph√≤ng": (20.8648, 106.6835),
    "ƒê√† N·∫µng": (16.0678, 108.2208),
    "Hu·∫ø": (16.4637, 107.5909),
    "TP. H·ªì Ch√≠ Minh": (10.7769, 106.7009),
    "C·∫ßn Th∆°": (10.0452, 105.7469),
    "Nha Trang": (12.2388, 109.1967),
    "ƒê√† L·∫°t": (11.9404, 108.4583),
    "Pleiku": (13.9833, 108.0000),
    "Vinh": (18.6736, 105.6924)
}

# -------------------------------
# Giao di·ªán ch·ªçn t·ªânh/th√†nh ph·ªë
# -------------------------------
selected_city = st.selectbox("üèôÔ∏è Ch·ªçn t·ªânh/th√†nh ph·ªë:", list(cities.keys()))
latitude, longitude = cities[selected_city]

# -------------------------------
# C√°c lo·∫°i d·ªØ li·ªáu c·∫ßn l·∫•y
# -------------------------------
st.markdown("#### Ch·ªçn lo·∫°i d·ªØ li·ªáu mu·ªën hi·ªÉn th·ªã v√† t·∫£i xu·ªëng:")
data_options = ["Nhi·ªát ƒë·ªô (¬∞C)", "L∆∞·ª£ng m∆∞a (mm)", "ƒê·ªô ·∫©m (%)", "T·ªëc ƒë·ªô gi√≥ (m/s)"]
selected_data = st.multiselect("üß≠ Ch·ªçn th√¥ng s·ªë:", data_options, default=data_options)

# -------------------------------
# G·ªçi API th·ªùi ti·∫øt m·ªü Open-Meteo
# -------------------------------
if st.button("üåç L·∫•y d·ªØ li·ªáu th·ªùi ti·∫øt"):
    st.info(f"ƒêang t·∫£i d·ªØ li·ªáu th·ªùi ti·∫øt t·∫°i **{selected_city}** ...")

    url = (
        f"https://api.open-meteo.com/v1/forecast?"
        f"latitude={latitude}&longitude={longitude}"
        f"&hourly=temperature_2m,relative_humidity_2m,precipitation,wind_speed_10m"
        f"&forecast_days=1&timezone=Asia/Bangkok"
    )

    try:
        response = requests.get(url)
        data = response.json()

        hourly = data["hourly"]
        df = pd.DataFrame({
            "Th·ªùi gian": hourly["time"],
            "Nhi·ªát ƒë·ªô (¬∞C)": hourly["temperature_2m"],
            "ƒê·ªô ·∫©m (%)": hourly["relative_humidity_2m"],
            "L∆∞·ª£ng m∆∞a (mm)": hourly["precipitation"],
            "T·ªëc ƒë·ªô gi√≥ (m/s)": hourly["wind_speed_10m"]
        })

        # L·ªçc theo th√¥ng s·ªë ƒë∆∞·ª£c ch·ªçn
        columns_to_show = ["Th·ªùi gian"] + [col for col in df.columns if any(x in col for x in selected_data)]
        df_filtered = df[columns_to_show]

        # -------------------------------
        # Hi·ªÉn th·ªã b·∫£ng d·ªØ li·ªáu
        # -------------------------------
        st.subheader(f"üìä D·ªØ li·ªáu kh√≠ t∆∞·ª£ng t·∫°i {selected_city}")
        st.dataframe(df_filtered, use_container_width=True)

        # -------------------------------
        # Hi·ªÉn th·ªã bi·ªÉu ƒë·ªì n·∫øu c√≥ ch·ªçn
        # -------------------------------
        for param in selected_data:
            col_name = [c for c in df.columns if param in c][0]
            st.line_chart(df, x="Th·ªùi gian", y=col_name, height=250)

        # -------------------------------
        # T√πy ch·ªçn t·∫£i file CSV
        # -------------------------------
        csv = df_filtered.to_csv(index=False).encode("utf-8")
        st.download_button(
            label="üíæ T·∫£i d·ªØ li·ªáu (.CSV)",
            data=csv,
            file_name=f"{selected_city}_weather_data.csv",
            mime="text/csv"
        )

        st.success("‚úÖ D·ªØ li·ªáu ƒë√£ ƒë∆∞·ª£c t·∫£i v√† hi·ªÉn th·ªã th√†nh c√¥ng!")

    except Exception as e:
        st.error(f"‚ùå L·ªói khi t·∫£i d·ªØ li·ªáu: {e}")

# -------------------------------
# Ch√¢n trang c·ªë ƒë·ªãnh
# -------------------------------
st.markdown(
    """
    <hr style="margin-top:50px; margin-bottom:10px;">
    <div style="text-align:center; color:gray; font-size:14px;">
    ¬© 2025 Tr∆∞·ªùng THPT L√™ Qu√Ω ƒê√¥n ‚Äì Long B√¨nh T√¢n | Web app thu th·∫≠p d·ªØ li·ªáu th·ªùi gian th·ª±c
    </div>
    """,
    unsafe_allow_html=True
)
